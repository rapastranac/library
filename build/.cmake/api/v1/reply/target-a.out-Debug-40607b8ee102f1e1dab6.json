{
	"artifacts" : 
	[
		{
			"path" : "/home/andres/Documents/github/library/a.out"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"add_compile_options",
			"add_definitions",
			"include_directories"
		],
		"files" : 
		[
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 68,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 28,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 20,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 21,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 24,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 15,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 38,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 39,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g  "
				},
				{
					"fragment" : "-pthread"
				},
				{
					"backtrace" : 2,
					"fragment" : "-std=c++2a"
				},
				{
					"backtrace" : 2,
					"fragment" : "-fconcepts"
				},
				{
					"backtrace" : 2,
					"fragment" : "-Wall"
				},
				{
					"backtrace" : 2,
					"fragment" : "-Wextra"
				},
				{
					"fragment" : "-std=gnu++2a"
				}
			],
			"defines" : 
			[
				{
					"backtrace" : 3,
					"define" : "DLB=true"
				},
				{
					"backtrace" : 4,
					"define" : "MPI_ENABLED"
				},
				{
					"backtrace" : 5,
					"define" : "VC_VOID_MPI"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 6,
					"path" : "/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi"
				},
				{
					"backtrace" : 6,
					"path" : "/usr/lib/x86_64-linux-gnu/openmpi/include"
				},
				{
					"backtrace" : 7,
					"path" : "/home/andres/Documents/github/library/cereal"
				},
				{
					"backtrace" : 7,
					"path" : "/home/andres/Documents/github/library/fmt/include"
				},
				{
					"backtrace" : 8,
					"path" : "/home/andres/Documents/github/library/include"
				}
			],
			"language" : "CXX",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7
			]
		}
	],
	"id" : "a.out::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"fragment" : "-Wl,-rpath,/usr/lib/x86_64-linux-gnu/openmpi/lib",
				"role" : "libraries"
			},
			{
				"fragment" : "-lpthread",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so",
				"role" : "libraries"
			},
			{
				"fragment" : "/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "a.out",
	"nameOnDisk" : "a.out",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/main.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/main_non_void_MPI.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/main_non_void.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/main_void_MPI.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/main_void.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/read_graphs.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "fmt/src/format.cc",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "fmt/src/os.cc",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
